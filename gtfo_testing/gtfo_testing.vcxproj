<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug_clang|Win32">
      <Configuration>Debug_clang</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug_clang|x64">
      <Configuration>Debug_clang</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_clang|Win32">
      <Configuration>Release_clang</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_clang|x64">
      <Configuration>Release_clang</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="runtime\algorithm\adjacent_find.cpp" />
    <ClCompile Include="runtime\algorithm\all_of.cpp" />
    <ClCompile Include="runtime\algorithm\any_of.cpp" />
    <ClCompile Include="runtime\algorithm\count.cpp" />
    <ClCompile Include="runtime\algorithm\count_if.cpp" />
    <ClCompile Include="runtime\algorithm\equal.cpp" />
    <ClCompile Include="runtime\algorithm\find.cpp" />
    <ClCompile Include="runtime\algorithm\find_end.cpp" />
    <ClCompile Include="runtime\algorithm\find_first_of.cpp" />
    <ClCompile Include="runtime\algorithm\find_if.cpp" />
    <ClCompile Include="runtime\algorithm\find_if_not.cpp" />
    <ClCompile Include="runtime\algorithm\for_each.cpp" />
    <ClCompile Include="runtime\algorithm\is_permutation.cpp" />
    <ClCompile Include="runtime\algorithm\mismatch.cpp" />
    <ClCompile Include="runtime\algorithm\none_of.cpp" />
    <ClCompile Include="runtime\algorithm\search.cpp" />
    <ClCompile Include="runtime\algorithm\search_n.cpp" />
    <ClCompile Include="runtime\container\matrix.cpp" />
    <ClCompile Include="runtime\functional\arithmetic_operations.cpp" />
    <ClCompile Include="runtime\functional\comparisons.cpp" />
    <ClCompile Include="runtime\functional\not_.cpp" />
    <ClCompile Include="runtime\numeric\accumulate.cpp" />
    <ClCompile Include="runtime\numeric\adjacent_difference.cpp" />
    <ClCompile Include="runtime\numeric\inner_product.cpp" />
    <ClCompile Include="runtime\numeric\iota.cpp" />
    <ClCompile Include="runtime\numeric\partial_sum.cpp" />
    <ClCompile Include="runtime\runtime_tests.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\hierarchy_with_virtual_constructors_derived_classes.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\hierarchy_with_virtual_constructors_test.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_bitwise_copying.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_bitwise_exclusive_move.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_const.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_member_fields_access_through_pointers.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_nothrow_moveable_and_throwing_copyable.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_nothrow_moveable_only.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_no_moving_or_copying.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_pending_member_function_calls.cpp" />
    <ClCompile Include="runtime\utils\polymorphic_holder\test_throwing_moveable_only.cpp" />
    <ClCompile Include="static\are_addable.cpp" />
    <ClCompile Include="static\are_comparable_op_eq.cpp" />
    <ClCompile Include="static\are_comparable_op_less.cpp" />
    <ClCompile Include="static\are_comparable_op_n_eq.cpp" />
    <ClCompile Include="static\are_comparable_pred.cpp" />
    <ClCompile Include="static\are_multipliable.cpp" />
    <ClCompile Include="static\are_subtractable.cpp" />
    <ClCompile Include="static\can_be_used_in_boolean_context.cpp" />
    <ClCompile Include="static\common_type_2.cpp" />
    <ClCompile Include="static\has_begin.cpp" />
    <ClCompile Include="static\has_end.cpp" />
    <ClCompile Include="static\is_assignable.cpp" />
    <ClCompile Include="static\is_dereferenceable.cpp" />
    <ClCompile Include="static\is_incrementable.cpp" />
    <ClCompile Include="static\is_invokable.cpp" />
    <ClCompile Include="static\is_invokable_fun0.cpp" />
    <ClCompile Include="static\is_invokable_fun1.cpp" />
    <ClCompile Include="static\is_invokable_fun2.cpp" />
    <ClCompile Include="static\is_iterator.cpp" />
    <ClCompile Include="static\is_logically_negatable.cpp" />
    <ClCompile Include="static\is_nothrow_invokable.cpp" />
    <ClCompile Include="static\is_nothrow_logically_negatable.cpp" />
    <ClCompile Include="static\is_predicate1.cpp" />
    <ClCompile Include="static\is_predicate2.cpp" />
    <ClCompile Include="static\is_range.cpp" />
    <ClCompile Include="static\is_range_castable_to_its_iterator.cpp" />
    <ClCompile Include="static\is_range_with_same_begin_end.cpp" />
    <ClCompile Include="static\iterator_of_range.cpp" />
    <ClCompile Include="static\mem_fun_invoke_call_result.cpp" />
    <ClCompile Include="static\mem_fun_invoke_is_callable.cpp" />
    <ClCompile Include="static\mem_fun_invoke_is_nothrow_callable.cpp" />
    <ClCompile Include="static\result_of_addition.cpp" />
    <ClCompile Include="static\result_of_begin.cpp" />
    <ClCompile Include="static\result_of_dereferencing.cpp" />
    <ClCompile Include="static\result_of_end.cpp" />
    <ClCompile Include="static\result_of_fun0.cpp" />
    <ClCompile Include="static\result_of_fun1.cpp" />
    <ClCompile Include="static\result_of_fun2.cpp" />
    <ClCompile Include="static\result_of_invocation.cpp" />
    <ClCompile Include="static\result_of_logical_negation.cpp" />
    <ClCompile Include="static\result_of_multiplication.cpp" />
    <ClCompile Include="static\result_of_range_iterator_dereferencing.cpp" />
    <ClCompile Include="static\result_of_subtraction.cpp" />
    <ClCompile Include="static\static_test_functional_not_.cpp" />
    <ClCompile Include="static\value_from_range.cpp" />
    <ClCompile Include="static\value_of_dereferenced.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\gtfo\algorithm.hpp" />
    <ClInclude Include="..\gtfo\algorithm\adjacent_find.hpp" />
    <ClInclude Include="..\gtfo\algorithm\all_of.hpp" />
    <ClInclude Include="..\gtfo\algorithm\any_of.hpp" />
    <ClInclude Include="..\gtfo\algorithm\count.hpp" />
    <ClInclude Include="..\gtfo\algorithm\count_if.hpp" />
    <ClInclude Include="..\gtfo\algorithm\equal.hpp" />
    <ClInclude Include="..\gtfo\algorithm\find.hpp" />
    <ClInclude Include="..\gtfo\algorithm\find_end.hpp" />
    <ClInclude Include="..\gtfo\algorithm\find_first_of.hpp" />
    <ClInclude Include="..\gtfo\algorithm\find_if.hpp" />
    <ClInclude Include="..\gtfo\algorithm\find_if_not.hpp" />
    <ClInclude Include="..\gtfo\algorithm\for_each.hpp" />
    <ClInclude Include="..\gtfo\algorithm\is_permutation.hpp" />
    <ClInclude Include="..\gtfo\algorithm\mismatch.hpp" />
    <ClInclude Include="..\gtfo\algorithm\none_of.hpp" />
    <ClInclude Include="..\gtfo\algorithm\search.hpp" />
    <ClInclude Include="..\gtfo\algorithm\search_n.hpp" />
    <ClInclude Include="..\gtfo\container\matrix.hpp" />
    <ClInclude Include="..\gtfo\functional.hpp" />
    <ClInclude Include="..\gtfo\functional\divides.hpp" />
    <ClInclude Include="..\gtfo\functional\equal_to.hpp" />
    <ClInclude Include="..\gtfo\functional\greater.hpp" />
    <ClInclude Include="..\gtfo\functional\greater_equal.hpp" />
    <ClInclude Include="..\gtfo\functional\less.hpp" />
    <ClInclude Include="..\gtfo\functional\less_equal.hpp" />
    <ClInclude Include="..\gtfo\functional\minus.hpp" />
    <ClInclude Include="..\gtfo\functional\modulus.hpp" />
    <ClInclude Include="..\gtfo\functional\multiplies.hpp" />
    <ClInclude Include="..\gtfo\functional\negate.hpp" />
    <ClInclude Include="..\gtfo\functional\not_.hpp" />
    <ClInclude Include="..\gtfo\functional\not_equal_to.hpp" />
    <ClInclude Include="..\gtfo\functional\plus.hpp" />
    <ClInclude Include="..\gtfo\numeric.hpp" />
    <ClInclude Include="..\gtfo\numeric\accumulate.hpp" />
    <ClInclude Include="..\gtfo\numeric\adjacent_difference.hpp" />
    <ClInclude Include="..\gtfo\numeric\inner_product.hpp" />
    <ClInclude Include="..\gtfo\numeric\iota.hpp" />
    <ClInclude Include="..\gtfo\numeric\partial_sum.hpp" />
    <ClInclude Include="..\gtfo\reversed_range.hpp" />
    <ClInclude Include="..\gtfo\utils\polymorphic_holder.hpp" />
    <ClInclude Include="..\gtfo\_impl\container\matrix\initializer_list_utils.hpp" />
    <ClInclude Include="..\gtfo\_impl\container\matrix\matrix_exceptions.hpp" />
    <ClInclude Include="..\gtfo\_impl\container\matrix\matrix_rows_iterator.hpp" />
    <ClInclude Include="..\gtfo\_impl\container\matrix\matrix_rows_iterator_conversion_mixin.hpp" />
    <ClInclude Include="..\gtfo\_impl\container\matrix\matrix_rows_reverse_iterator_base_mixin.hpp" />
    <ClInclude Include="..\gtfo\_impl\functional\function_object_holder.hpp" />
    <ClInclude Include="..\gtfo\_impl\iterator_range.hpp" />
    <ClInclude Include="..\gtfo\_impl\mem.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_addable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_comparable_op_eq.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_comparable_op_less.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_comparable_op_n_eq.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_comparable_pred.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_multipliable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\are_subtractable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\can_be_used_in_boolean_context.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\common_type_2.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\has_begin.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\has_end.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_assignable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_dereferenceable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_incrementable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_invokable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_invokable_fun0.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_invokable_fun1.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_invokable_fun2.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_iterator.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_logically_negatable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_nothrow_invokable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_nothrow_logically_negatable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_predicate1.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_predicate2.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_range.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_range_castable_to_its_iterator.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\is_range_with_same_begin_end.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\iterator_of_range.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\mem_fun_invoke_call_result.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\mem_fun_invoke_is_callable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\mem_fun_invoke_is_nothrow_callable.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_addition.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_begin.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_dereferencing.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_end.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_fun0.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_fun1.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_fun2.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_invocation.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_logical_negation.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_multiplication.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_range_iterator_dereferencing.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\result_of_subtraction.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\value_from_range.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\value_of_dereferenced.hpp" />
    <ClInclude Include="..\gtfo\_impl\type_traits\_type_traits_definitions.hpp" />
    <ClInclude Include="..\gtfo\_impl\utility.hpp" />
    <ClInclude Include="..\gtfo\_impl\_common_definitions.hpp" />
    <ClInclude Include="runtime\runtime_tests.hpp" />
    <ClInclude Include="runtime\utils\polymorphic_holder\hierarchy_with_virtual_constructors.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{E2142809-7234-4030-9AE5-DFDA1FC331EF}</ProjectGuid>
    <RootNamespace>gtfo</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
    <ProjectName>gtfo_testing</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>LLVM-vs2014</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>LLVM-vs2014</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>LLVM-vs2014</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>LLVM-vs2014</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OptimizeReferences>false</OptimizeReferences>
    </Link>
    <Link>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|Win32'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OptimizeReferences>false</OptimizeReferences>
    </Link>
    <Link>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <OmitFramePointers>false</OmitFramePointers>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OptimizeReferences>false</OptimizeReferences>
    </Link>
    <Link>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_clang|x64'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <OmitFramePointers>false</OmitFramePointers>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OptimizeReferences>false</OptimizeReferences>
    </Link>
    <Link>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|Win32'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_clang|x64'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>.;..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>